{
    "docs": [
        {
            "location": "/", 
            "text": "TensorMatrices_lemon Module\n\n\npages\n\n\n#\n\n\nTensorMatrices_lemon\n \n \nModule\n.\n\n\nconvert tensor to matrix or matrix to tensor storing the index info\n\n\nsource\n\n\n\n\nTensorMatrices_lemon Module\n\n\nTypes\n\n\nMethods\n\n\nindex\n\n\n\n\n\n\n\n\n\n\nTypes\n\n\n#\n\n\nTensorMatrices_lemon.Tenmat\n \n \nType\n.\n\n\nTenmat{T}(matrix::Array{T,2}, rowindex::Vector{Int}, colindex::Vector{Int}, tensorsize::Tuple{Vararg{Int}})\n\n\n\n\nMatrix which stores the indices to convert it back to tensor.\n\n\nExample\n\n\nmatrix = Array(reshape(1:48, 6, 8)) # some 6 x 8 matrix\nrowindex = [3,1]\ncolindex = [2,4]\ntensorsize = (2,4,3,2)\ntenmat = Tenmat(matrix, rowindex, colindex, tensorsize)\n\n# output\n\nTensorMatrices_lemon.Tenmat{Int64}([1 7 \u2026 37 43; 2 8 \u2026 38 44; \u2026 ; 5 11 \u2026 41 47; 6 12 \u2026 42 48],[3,1],[2,4],(2,4,3,2))\n\n\n\n\nsource\n\n\n#\n\n\nTensorMatrices_lemon.Tenmat\n \n \nMethod\n.\n\n\nTenmat{T}(matrix::Matrix{T})\n\n\n\n\nSet a matrix as a Tenmat. \n\n\nsource\n\n\n#\n\n\nTensorMatrices_lemon.Tenmat\n \n \nMethod\n.\n\n\nTenmat{T,N}(tensor::Array{T,N}, rowindex::Vector{Int}, colindex::Vector{Int})\n\n\n\n\nSet a tensor as a Tenmat.  \n\n\nTenmat.matrix\n will return the converted matrix.  \n\n\nExample\n\n\nA = Array(reshape(1:3024, 4,7,2,9,6)) # tensor, size of [4,7,2,9,6]\nrowindex = [5,2] # 5th and 2nd indices maps to the row\ncolindex = [3,4,1] # 3rd, 4th and 1st indices maps to the column\ntenmat = Tenmat(A,rowindex,colindex)\n\n# output\n\nTensorMatrices_lemon.Tenmat{Int64}([1 29 \u2026 452 480; 505 533 \u2026 956 984; \u2026 ; 2041 2069 \u2026 2492 2520; 2545 2573 \u2026 2996 3024],[5,2],[3,4,1],(4,7,2,9,6))\n\n\n\n\nsource\n\n\n\n\nMethods\n\n\nwhat to write:  size - DONE     getindex - DONE     setindex! - DONE    similar - DONE  ndims - DONE    getMatrix - DONE    tensorSize - DONE   \u2013\u2013  DO THE EXAMPLES!!!  tensor2tenmat - DONE    tenmat2tensor - DONE\n\n\n#\n\n\nBase.size\n \n \nMethod\n.\n\n\nsize(tenmat::Tenmat, args...)\n\n\n\n\nReturn the size of the tenmat.matrix.  \n\n\njulia\n size(tenmat)\n(42,72)\n\njulia\n size(tenmat,2)\n72\n\n\n\n\nsource\n\n\n#\n\n\nBase.setindex!\n \n \nMethod\n.\n\n\nsetindex!(tenmat::Tenmat, args...)\n\n\n\n\nExpands \nsetindex!\n by tenmat.matrix.  \n\n\njulia\n setindex!(tenmat, 100, 2, 6);\n\n\n\n\nsource\n\n\n#\n\n\nBase.getindex\n \n \nMethod\n.\n\n\ngetindex(tenmat::Tenmat, args...)\n\n\n\n\nExpands \ngetindex\n by tenmat.matrix.  \n\n\njulia\n getindex(tenmat, 2, 6)\n100\n\n\n\n\nsource\n\n\n#\n\n\nBase.similar\n \n \nMethod\n.\n\n\nsimilar\n\n\n\n\nsimilar\n\n\nExamples\n\n\nA = rand(4,7,6)\ntenmat = Tenmat(A,[3,1],[2])\nsimilar(tenmat, Int)\nsimilar(tenmat, Int, (5,2,7))\nsimilar(tenmat, Int, [1,3],[2])\nsimilar(tenmat, Int, [4,2,5], [1,3], (2,4,3,1,6))\nsimilar(tenmat)\nsimilar(tenmat, (5,2,7))\nsimilar(tenmat, [1,3],[2])\nB = similar(tenmat, [4,2,5], [1,3], (2,4,3,1,6))\nsize(B)\n\n# output\n\n(24,6)\n\n\n\n\n\nsource\n\n\n#\n\n\nBase.ndims\n \n \nMethod\n.\n\n\nndims(tenmat::Tenmat)\n\n\n\n\nReturn the original dimension of tenmat, from \ntensorsize\n.  \n\n\nA = Array(reshape(1:3024, 4,7,2,9,6)) \ntenmat = Tenmat(A,[5,2],[3,4,1])\nndims(tenmat)\n\n# output\n\n5\n\n\n\n\nsource\n\n\n#\n\n\nTensorMatrices_lemon.tensorSize\n \n \nMethod\n.\n\n\ntensorSize(tenmat::Tenmat)\n\n\n\n\nReturn the tensorsize.  \n\n\njulia\n tensorSize(tenmat)\n(4,7,2,9,6)\n\n\n\n\nsource\n\n\n#\n\n\nTensorMatrices_lemon.getMatrix\n \n \nMethod\n.\n\n\ngetMatrix(tenmat::Tenmat)\n\n\n\n\nReturn the matrix.  \n\n\nA = Array(reshape(1:18, 3, 2, 3))\ntenmat = Tenmat(A,[3,1],[2])\ngetMatrix(tenmat)\n\n# output\n\n9\u00d72 Array{Int64,2}:\n  1   4\n  7  10\n 13  16\n  2   5\n  8  11\n 14  17\n  3   6\n  9  12\n 15  18\n\n\n\n\nsource\n\n\n#\n\n\nTensorMatrices_lemon.tensor2tenmat\n \n \nMethod\n.\n\n\ntensor2tenmat{T,N}(tensor::Array{T,N}, rowindex::Vector{Int}, colindex::Vector{Int})\n\n\n\n\nConvert tensor to tenmat.  \n\n\nexamples\n\n\njulia\n A = rand(3,5,3,2,6);\n\njulia\n tenmatA = tensor2tenmat(A,[3,5,2],[4,1]);\n\njulia\n size(getMatrix(tenmatA))\n(90,6)\n\njulia\n tensorSize(tenmatA)\n(3,5,3,2,6)\n\n\njulia\n B = Array(reshape(1:10,2,5));\n\njulia\n tenmatB = tensor2tenmat(B,[2],[1]);\n\njulia\n tenmatB.matrix == transpose(B)\ntrue\n\njulia\n tensorSize(tenmatB)\n(2,5)\n\n\n\n\n\nsource\n\n\n#\n\n\nTensorMatrices_lemon.tenmat2tensor\n \n \nMethod\n.\n\n\ntenmat2tensor{T}(tenmat::Tenmat{T})\n\n\n\n\nConvert tenmat back to the tensor.  \n\n\nexamples\n\n\njulia\n A = rand(3,5,3,2,8);\n\njulia\n tenmatA = tensor2tenmat(A,[3,5,2],[4,1]);\n\njulia\n back2A = tenmat2tensor(tenmatA);\n\njulia\n A == back2A\ntrue\n\n\n\n\nB = rand(8,6,7,5,8,5,3,8)\ntenmatB = tensor2tenmat(B,[1,7,3,2,6],[5,8,4])\nback2B = tenmat2tensor(tenmatB)\ncheck = true\nfor a=1:8, b=1:6, c=1:7, d=1:5, e=1:8, f=1:5, g=1:3, h=1:8\n    back2B[a,b,c,d,e,f,g,h] == B[a,b,c,d,e,f,g,h] || check * false\nend\ncheck\n\n# output\n\ntrue\n\n\n\n\nsource\n\n\n\n\nindex\n\n\n\n\nTensorMatrices_lemon\n\n\nTensorMatrices_lemon.Tenmat\n\n\nTensorMatrices_lemon.Tenmat\n\n\nTensorMatrices_lemon.Tenmat\n\n\nBase.getindex\n\n\nBase.ndims\n\n\nBase.setindex!\n\n\nBase.similar\n\n\nBase.size\n\n\nTensorMatrices_lemon.getMatrix\n\n\nTensorMatrices_lemon.tenmat2tensor\n\n\nTensorMatrices_lemon.tensor2tenmat\n\n\nTensorMatrices_lemon.tensorSize", 
            "title": "Home"
        }, 
        {
            "location": "/#tensormatrices_lemon-module", 
            "text": "pages  #  TensorMatrices_lemon     Module .  convert tensor to matrix or matrix to tensor storing the index info  source   TensorMatrices_lemon Module  Types  Methods  index", 
            "title": "TensorMatrices_lemon Module"
        }, 
        {
            "location": "/#types", 
            "text": "#  TensorMatrices_lemon.Tenmat     Type .  Tenmat{T}(matrix::Array{T,2}, rowindex::Vector{Int}, colindex::Vector{Int}, tensorsize::Tuple{Vararg{Int}})  Matrix which stores the indices to convert it back to tensor.  Example  matrix = Array(reshape(1:48, 6, 8)) # some 6 x 8 matrix\nrowindex = [3,1]\ncolindex = [2,4]\ntensorsize = (2,4,3,2)\ntenmat = Tenmat(matrix, rowindex, colindex, tensorsize)\n\n# output\n\nTensorMatrices_lemon.Tenmat{Int64}([1 7 \u2026 37 43; 2 8 \u2026 38 44; \u2026 ; 5 11 \u2026 41 47; 6 12 \u2026 42 48],[3,1],[2,4],(2,4,3,2))  source  #  TensorMatrices_lemon.Tenmat     Method .  Tenmat{T}(matrix::Matrix{T})  Set a matrix as a Tenmat.   source  #  TensorMatrices_lemon.Tenmat     Method .  Tenmat{T,N}(tensor::Array{T,N}, rowindex::Vector{Int}, colindex::Vector{Int})  Set a tensor as a Tenmat.    Tenmat.matrix  will return the converted matrix.    Example  A = Array(reshape(1:3024, 4,7,2,9,6)) # tensor, size of [4,7,2,9,6]\nrowindex = [5,2] # 5th and 2nd indices maps to the row\ncolindex = [3,4,1] # 3rd, 4th and 1st indices maps to the column\ntenmat = Tenmat(A,rowindex,colindex)\n\n# output\n\nTensorMatrices_lemon.Tenmat{Int64}([1 29 \u2026 452 480; 505 533 \u2026 956 984; \u2026 ; 2041 2069 \u2026 2492 2520; 2545 2573 \u2026 2996 3024],[5,2],[3,4,1],(4,7,2,9,6))  source", 
            "title": "Types"
        }, 
        {
            "location": "/#methods", 
            "text": "what to write:  size - DONE     getindex - DONE     setindex! - DONE    similar - DONE  ndims - DONE    getMatrix - DONE    tensorSize - DONE   \u2013\u2013  DO THE EXAMPLES!!!  tensor2tenmat - DONE    tenmat2tensor - DONE  #  Base.size     Method .  size(tenmat::Tenmat, args...)  Return the size of the tenmat.matrix.    julia  size(tenmat)\n(42,72)\n\njulia  size(tenmat,2)\n72  source  #  Base.setindex!     Method .  setindex!(tenmat::Tenmat, args...)  Expands  setindex!  by tenmat.matrix.    julia  setindex!(tenmat, 100, 2, 6);  source  #  Base.getindex     Method .  getindex(tenmat::Tenmat, args...)  Expands  getindex  by tenmat.matrix.    julia  getindex(tenmat, 2, 6)\n100  source  #  Base.similar     Method .  similar  similar  Examples  A = rand(4,7,6)\ntenmat = Tenmat(A,[3,1],[2])\nsimilar(tenmat, Int)\nsimilar(tenmat, Int, (5,2,7))\nsimilar(tenmat, Int, [1,3],[2])\nsimilar(tenmat, Int, [4,2,5], [1,3], (2,4,3,1,6))\nsimilar(tenmat)\nsimilar(tenmat, (5,2,7))\nsimilar(tenmat, [1,3],[2])\nB = similar(tenmat, [4,2,5], [1,3], (2,4,3,1,6))\nsize(B)\n\n# output\n\n(24,6)  source  #  Base.ndims     Method .  ndims(tenmat::Tenmat)  Return the original dimension of tenmat, from  tensorsize .    A = Array(reshape(1:3024, 4,7,2,9,6)) \ntenmat = Tenmat(A,[5,2],[3,4,1])\nndims(tenmat)\n\n# output\n\n5  source  #  TensorMatrices_lemon.tensorSize     Method .  tensorSize(tenmat::Tenmat)  Return the tensorsize.    julia  tensorSize(tenmat)\n(4,7,2,9,6)  source  #  TensorMatrices_lemon.getMatrix     Method .  getMatrix(tenmat::Tenmat)  Return the matrix.    A = Array(reshape(1:18, 3, 2, 3))\ntenmat = Tenmat(A,[3,1],[2])\ngetMatrix(tenmat)\n\n# output\n\n9\u00d72 Array{Int64,2}:\n  1   4\n  7  10\n 13  16\n  2   5\n  8  11\n 14  17\n  3   6\n  9  12\n 15  18  source  #  TensorMatrices_lemon.tensor2tenmat     Method .  tensor2tenmat{T,N}(tensor::Array{T,N}, rowindex::Vector{Int}, colindex::Vector{Int})  Convert tensor to tenmat.    examples  julia  A = rand(3,5,3,2,6);\n\njulia  tenmatA = tensor2tenmat(A,[3,5,2],[4,1]);\n\njulia  size(getMatrix(tenmatA))\n(90,6)\n\njulia  tensorSize(tenmatA)\n(3,5,3,2,6)\n\n\njulia  B = Array(reshape(1:10,2,5));\n\njulia  tenmatB = tensor2tenmat(B,[2],[1]);\n\njulia  tenmatB.matrix == transpose(B)\ntrue\n\njulia  tensorSize(tenmatB)\n(2,5)  source  #  TensorMatrices_lemon.tenmat2tensor     Method .  tenmat2tensor{T}(tenmat::Tenmat{T})  Convert tenmat back to the tensor.    examples  julia  A = rand(3,5,3,2,8);\n\njulia  tenmatA = tensor2tenmat(A,[3,5,2],[4,1]);\n\njulia  back2A = tenmat2tensor(tenmatA);\n\njulia  A == back2A\ntrue  B = rand(8,6,7,5,8,5,3,8)\ntenmatB = tensor2tenmat(B,[1,7,3,2,6],[5,8,4])\nback2B = tenmat2tensor(tenmatB)\ncheck = true\nfor a=1:8, b=1:6, c=1:7, d=1:5, e=1:8, f=1:5, g=1:3, h=1:8\n    back2B[a,b,c,d,e,f,g,h] == B[a,b,c,d,e,f,g,h] || check * false\nend\ncheck\n\n# output\n\ntrue  source", 
            "title": "Methods"
        }, 
        {
            "location": "/#index", 
            "text": "TensorMatrices_lemon  TensorMatrices_lemon.Tenmat  TensorMatrices_lemon.Tenmat  TensorMatrices_lemon.Tenmat  Base.getindex  Base.ndims  Base.setindex!  Base.similar  Base.size  TensorMatrices_lemon.getMatrix  TensorMatrices_lemon.tenmat2tensor  TensorMatrices_lemon.tensor2tenmat  TensorMatrices_lemon.tensorSize", 
            "title": "index"
        }
    ]
}